#BlueJ class context
comment0.target=Rectangulo
comment0.text=\r\n\ La\ clase\ Rectangulo\ modela\ un\ rect\u00E1ngulo\ definido\ por\ un\ punto\ de\ origen,\ un\ ancho\ y\ un\ alto.\r\n\ Proporciona\ m\u00E9todos\ para\ calcular\ su\ \u00E1rea,\ per\u00EDmetro,\ desplazar\ su\ origen,\ \r\n\ y\ comparar\ su\ tama\u00F1o\ con\ otro\ rect\u00E1ngulo.\r\n
comment1.params=ancho\ alto
comment1.target=Rectangulo(double,\ double)
comment1.text=\r\n\ Constructor\ que\ crea\ un\ rect\u00E1ngulo\ con\ el\ origen\ en\ el\ punto\ (0,\ 0).\r\n\r\n\ @param\ ancho\ El\ ancho\ del\ rect\u00E1ngulo.\r\n\ @param\ alto\ \ El\ alto\ del\ rect\u00E1ngulo.\r\n
comment10.params=
comment10.target=double\ perimetro()
comment10.text=\r\n\ Calcula\ el\ per\u00EDmetro\ del\ rect\u00E1ngulo.\r\n\r\n\ @return\ El\ per\u00EDmetro\ del\ rect\u00E1ngulo.\r\n
comment11.params=
comment11.target=double\ superficie()
comment11.text=\r\n\ Calcula\ la\ superficie\ (\u00E1rea)\ del\ rect\u00E1ngulo.\r\n\r\n\ @return\ La\ superficie\ del\ rect\u00E1ngulo.\r\n
comment12.params=
comment12.target=void\ caracteristicas()
comment12.text=\r\n\ Muestra\ las\ caracter\u00EDsticas\ del\ rect\u00E1ngulo,\ incluyendo\ origen,\ ancho,\ alto,\ superficie\ y\ per\u00EDmetro.\r\n
comment13.params=otroRectangulo
comment13.target=double\ distanciaA(Rectangulo)
comment13.text=\r\n\ Calcula\ la\ distancia\ entre\ el\ origen\ de\ este\ rect\u00E1ngulo\ y\ el\ origen\ de\ otro\ rect\u00E1ngulo.\r\n\r\n\ @param\ otroRectangulo\ El\ otro\ rect\u00E1ngulo\ con\ el\ que\ se\ calcular\u00E1\ la\ distancia.\r\n\ @return\ La\ distancia\ entre\ los\ or\u00EDgenes\ de\ los\ dos\ rect\u00E1ngulos.\r\n
comment14.params=otroRectangulo
comment14.target=Rectangulo\ elMayor(Rectangulo)
comment14.text=\r\n\ Compara\ la\ superficie\ de\ este\ rect\u00E1ngulo\ con\ la\ de\ otro\ y\ devuelve\ el\ rect\u00E1ngulo\ mayor.\r\n\r\n\ @param\ otroRectangulo\ El\ otro\ rect\u00E1ngulo\ a\ comparar.\r\n\ @return\ El\ rect\u00E1ngulo\ con\ mayor\ superficie\ (si\ son\ iguales,\ devuelve\ este\ rect\u00E1ngulo).\r\n
comment2.params=p_origen\ p_ancho\ p_alto
comment2.target=Rectangulo(Punto,\ double,\ double)
comment2.text=\r\n\ Constructor\ que\ crea\ un\ rect\u00E1ngulo\ con\ un\ origen\ espec\u00EDfico.\r\n\r\n\ @param\ origen\ El\ punto\ de\ origen\ del\ rect\u00E1ngulo.\r\n\ @param\ ancho\ \ El\ ancho\ del\ rect\u00E1ngulo.\r\n\ @param\ alto\ \ \ El\ alto\ del\ rect\u00E1ngulo.\r\n
comment3.params=origen
comment3.target=void\ setOrigen(Punto)
comment4.params=ancho
comment4.target=void\ setAncho(double)
comment4.text=\r\n\ Establece\ el\ ancho\ del\ rect\u00E1ngulo.\r\n\r\n\ @param\ ancho\ El\ nuevo\ ancho\ del\ rect\u00E1ngulo.\r\n
comment5.params=alto
comment5.target=void\ setAlto(double)
comment5.text=\r\n\ Establece\ el\ alto\ del\ rect\u00E1ngulo.\r\n\r\n\ @param\ alto\ El\ nuevo\ alto\ del\ rect\u00E1ngulo.\r\n
comment6.params=
comment6.target=double\ getAncho()
comment6.text=\r\n\ Devuelve\ el\ ancho\ del\ rect\u00E1ngulo.\r\n\r\n\ @return\ El\ ancho\ del\ rect\u00E1ngulo.\r\n
comment7.params=
comment7.target=double\ getAlto()
comment7.text=\r\n\ Devuelve\ el\ alto\ del\ rect\u00E1ngulo.\r\n\r\n\ @return\ El\ alto\ del\ rect\u00E1ngulo.\r\n
comment8.params=
comment8.target=Punto\ getOrigen()
comment9.params=dx\ dy
comment9.target=void\ desplazar(double,\ double)
comment9.text=\r\n\ Desplaza\ el\ rect\u00E1ngulo\ sumando\ un\ valor\ a\ las\ coordenadas\ del\ origen.\r\n\r\n\ @param\ dx\ Desplazamiento\ en\ el\ eje\ x.\r\n\ @param\ dy\ Desplazamiento\ en\ el\ eje\ y.\r\n
numComments=15
